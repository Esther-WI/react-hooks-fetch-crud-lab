{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/phases/react-hooks-fetch-crud-lab/src/components/App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport QuestionForm from \"./QuestionForm\";\nimport QuestionList from \"./QuestionList\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [questions, setQuestions] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:4000/questions\").then(res => res.json()).then(data => {\n      console.log(\"Fetched data:\", data); // Add this line to debug\n      setQuestions(data);\n    });\n  }, []);\n  function handleAddQuestion(newQuestion) {\n    setQuestions([...questions, newQuestion]);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Quiz Questions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionForm, {\n      onAddQuestion: handleAddQuestion\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(QuestionList, {\n      questions: questions,\n      setQuestions: setQuestions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"1ery3Y2F+nTWSbC27k3nmjCRtvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","QuestionForm","QuestionList","useState","useEffect","jsxDEV","_jsxDEV","App","_s","questions","setQuestions","fetch","then","res","json","data","console","log","handleAddQuestion","newQuestion","children","fileName","_jsxFileName","lineNumber","columnNumber","onAddQuestion","_c","$RefreshReg$"],"sources":["/home/user/Desktop/phases/react-hooks-fetch-crud-lab/src/components/App.js"],"sourcesContent":["import React from \"react\";\nimport QuestionForm from \"./QuestionForm\";\nimport QuestionList from \"./QuestionList\";\nimport { useState, useEffect } from \"react\";\n\nfunction App() {\n  const [questions, setQuestions] = useState([]);\n\n  useEffect(() => {\n    fetch(\"http://localhost:4000/questions\")\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(\"Fetched data:\", data); // Add this line to debug\n        setQuestions(data);\n      });\n  }, []);\n\n  function handleAddQuestion(newQuestion) {\n    setQuestions([...questions, newQuestion]);\n  }\n\n  return (\n    <div>\n      <h1>Quiz Questions</h1>\n      <QuestionForm onAddQuestion={handleAddQuestion} />\n      <QuestionList questions={questions} setQuestions={setQuestions} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,YAAY,MAAM,gBAAgB;AACzC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,iCAAiC,CAAC,CACrCC,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CACzBF,IAAI,CAAEG,IAAI,IAAK;MACdC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEF,IAAI,CAAC,CAAC,CAAC;MACpCL,YAAY,CAACK,IAAI,CAAC;IACpB,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,SAASG,iBAAiBA,CAACC,WAAW,EAAE;IACtCT,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEU,WAAW,CAAC,CAAC;EAC3C;EAEA,oBACEb,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBlB,OAAA,CAACL,YAAY;MAACwB,aAAa,EAAEP;IAAkB;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClDlB,OAAA,CAACJ,YAAY;MAACO,SAAS,EAAEA,SAAU;MAACC,YAAY,EAAEA;IAAa;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/D,CAAC;AAEV;AAAChB,EAAA,CAvBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AAyBZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}