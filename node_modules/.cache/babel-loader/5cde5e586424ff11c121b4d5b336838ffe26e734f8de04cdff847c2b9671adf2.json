{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/phases/react-hooks-fetch-crud-lab/src/components/QuestionForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuestionForm({\n  onAddQuestion\n}) {\n  _s();\n  const [formData, setFormData] = useState({\n    prompt: \"\",\n    answers: [\"\", \"\", \"\", \"\"],\n    correctIndex: 0\n  });\n  const [errors, setErrors] = useState([]);\n  function handleChange(e) {\n    const {\n      name,\n      value\n    } = e.target;\n    if (name.startsWith(\"answer\")) {\n      const index = parseInt(name.replace(\"answer\", \"\"));\n      const updatedAnswers = [...formData.answers];\n      updatedAnswers[index] = value;\n      setFormData({\n        ...formData,\n        answers: updatedAnswers\n      });\n    } else {\n      setFormData({\n        ...formData,\n        [name]: value\n      });\n    }\n  }\n  function validateForm() {\n    const newErrors = [];\n    if (!formData.prompt.trim()) {\n      newErrors.push(\"Prompt cannot be empty\");\n    }\n    if (formData.answers.some(answer => !answer.trim())) {\n      newErrors.push(\"All answer fields must be filled\");\n    }\n    if (formData.answers.some((answer, index) => formData.answers.indexOf(answer) !== index && answer.trim())) {\n      newErrors.push(\"Answers must be unique\");\n    }\n    setErrors(newErrors);\n    return newErrors.length === 0;\n  }\n  function handleSubmit(e) {\n    e.preventDefault();\n    if (!validateForm()) {\n      return;\n    }\n    fetch(\"http://localhost:4000/questions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        prompt: formData.prompt,\n        answers: formData.answers,\n        correctIndex: parseInt(formData.correctIndex)\n      })\n    }).then(res => {\n      if (!res.ok) throw new Error(\"Failed to create question\");\n      return res.json();\n    }).then(newQuestion => {\n      onAddQuestion(newQuestion);\n      // Reset form after successful submission\n      setFormData({\n        prompt: \"\",\n        answers: [\"\", \"\", \"\", \"\"],\n        correctIndex: 0\n      });\n      setErrors([]);\n    }).catch(error => {\n      setErrors([...errors, error.message]);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Question\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), errors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-messages\",\n      children: errors.map((error, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Prompt:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"prompt\",\n          value: formData.prompt,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), formData.answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Answer \", index + 1, \":\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: `answer${index}`,\n          value: answer,\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Correct Answer:\", /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"correctIndex\",\n          value: formData.correctIndex,\n          onChange: handleChange,\n          children: formData.answers.map((_, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: index,\n            disabled: !formData.answers[index].trim(),\n            children: formData.answers[index].trim() || `Answer ${index + 1}`\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n_s(QuestionForm, \"uqyf8VPzPJ9PWdF0Alrh/Jlgnfs=\");\n_c = QuestionForm;\nexport default QuestionForm;\nvar _c;\n$RefreshReg$(_c, \"QuestionForm\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","QuestionForm","onAddQuestion","_s","formData","setFormData","prompt","answers","correctIndex","errors","setErrors","handleChange","e","name","value","target","startsWith","index","parseInt","replace","updatedAnswers","validateForm","newErrors","trim","push","some","answer","indexOf","length","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","res","ok","Error","json","newQuestion","catch","error","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","style","color","onSubmit","type","onChange","required","_","disabled","_c","$RefreshReg$"],"sources":["/home/user/Desktop/phases/react-hooks-fetch-crud-lab/src/components/QuestionForm.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction QuestionForm({ onAddQuestion }) {\n  const [formData, setFormData] = useState({\n    prompt: \"\",\n    answers: [\"\", \"\", \"\", \"\"],\n    correctIndex: 0,\n  });\n  const [errors, setErrors] = useState([]);\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    if (name.startsWith(\"answer\")) {\n      const index = parseInt(name.replace(\"answer\", \"\"));\n      const updatedAnswers = [...formData.answers];\n      updatedAnswers[index] = value;\n      setFormData({ ...formData, answers: updatedAnswers });\n    } else {\n      setFormData({ ...formData, [name]: value });\n    }\n  }\n\n  function validateForm() {\n    const newErrors = [];\n\n    if (!formData.prompt.trim()) {\n      newErrors.push(\"Prompt cannot be empty\");\n    }\n\n    if (formData.answers.some((answer) => !answer.trim())) {\n      newErrors.push(\"All answer fields must be filled\");\n    }\n\n    if (\n      formData.answers.some(\n        (answer, index) =>\n          formData.answers.indexOf(answer) !== index && answer.trim()\n      )\n    ) {\n      newErrors.push(\"Answers must be unique\");\n    }\n\n    setErrors(newErrors);\n    return newErrors.length === 0;\n  }\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (!validateForm()) {\n      return;\n    }\n\n    fetch(\"http://localhost:4000/questions\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify({\n        prompt: formData.prompt,\n        answers: formData.answers,\n        correctIndex: parseInt(formData.correctIndex),\n      }),\n    })\n      .then((res) => {\n        if (!res.ok) throw new Error(\"Failed to create question\");\n        return res.json();\n      })\n      .then((newQuestion) => {\n        onAddQuestion(newQuestion);\n        // Reset form after successful submission\n        setFormData({\n          prompt: \"\",\n          answers: [\"\", \"\", \"\", \"\"],\n          correctIndex: 0,\n        });\n        setErrors([]);\n      })\n      .catch((error) => {\n        setErrors([...errors, error.message]);\n      });\n  }\n\n  return (\n    <section>\n      <h2>Add a New Question</h2>\n\n      {errors.length > 0 && (\n        <div className=\"error-messages\">\n          {errors.map((error, index) => (\n            <p key={index} style={{ color: \"red\" }}>\n              {error}\n            </p>\n          ))}\n        </div>\n      )}\n\n      <form onSubmit={handleSubmit}>\n        <label>\n          Prompt:\n          <input\n            type=\"text\"\n            name=\"prompt\"\n            value={formData.prompt}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        {formData.answers.map((answer, index) => (\n          <label key={index}>\n            Answer {index + 1}:\n            <input\n              type=\"text\"\n              name={`answer${index}`}\n              value={answer}\n              onChange={handleChange}\n              required\n            />\n          </label>\n        ))}\n\n        <label>\n          Correct Answer:\n          <select\n            name=\"correctIndex\"\n            value={formData.correctIndex}\n            onChange={handleChange}\n          >\n            {formData.answers.map((_, index) => (\n              <option\n                key={index}\n                value={index}\n                disabled={!formData.answers[index].trim()}\n              >\n                {formData.answers[index].trim() || `Answer ${index + 1}`}\n              </option>\n            ))}\n          </select>\n        </label>\n\n        <button type=\"submit\">Add Question</button>\n      </form>\n    </section>\n  );\n}\n\nexport default QuestionForm;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,SAASC,YAAYA,CAAC;EAAEC;AAAc,CAAC,EAAE;EAAAC,EAAA;EACvC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC;IACvCQ,MAAM,EAAE,EAAE;IACVC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;IACzBC,YAAY,EAAE;EAChB,CAAC,CAAC;EACF,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAExC,SAASa,YAAYA,CAACC,CAAC,EAAE;IACvB,MAAM;MAAEC,IAAI;MAAEC;IAAM,CAAC,GAAGF,CAAC,CAACG,MAAM;IAEhC,IAAIF,IAAI,CAACG,UAAU,CAAC,QAAQ,CAAC,EAAE;MAC7B,MAAMC,KAAK,GAAGC,QAAQ,CAACL,IAAI,CAACM,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;MAClD,MAAMC,cAAc,GAAG,CAAC,GAAGhB,QAAQ,CAACG,OAAO,CAAC;MAC5Ca,cAAc,CAACH,KAAK,CAAC,GAAGH,KAAK;MAC7BT,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAEG,OAAO,EAAEa;MAAe,CAAC,CAAC;IACvD,CAAC,MAAM;MACLf,WAAW,CAAC;QAAE,GAAGD,QAAQ;QAAE,CAACS,IAAI,GAAGC;MAAM,CAAC,CAAC;IAC7C;EACF;EAEA,SAASO,YAAYA,CAAA,EAAG;IACtB,MAAMC,SAAS,GAAG,EAAE;IAEpB,IAAI,CAAClB,QAAQ,CAACE,MAAM,CAACiB,IAAI,CAAC,CAAC,EAAE;MAC3BD,SAAS,CAACE,IAAI,CAAC,wBAAwB,CAAC;IAC1C;IAEA,IAAIpB,QAAQ,CAACG,OAAO,CAACkB,IAAI,CAAEC,MAAM,IAAK,CAACA,MAAM,CAACH,IAAI,CAAC,CAAC,CAAC,EAAE;MACrDD,SAAS,CAACE,IAAI,CAAC,kCAAkC,CAAC;IACpD;IAEA,IACEpB,QAAQ,CAACG,OAAO,CAACkB,IAAI,CACnB,CAACC,MAAM,EAAET,KAAK,KACZb,QAAQ,CAACG,OAAO,CAACoB,OAAO,CAACD,MAAM,CAAC,KAAKT,KAAK,IAAIS,MAAM,CAACH,IAAI,CAAC,CAC9D,CAAC,EACD;MACAD,SAAS,CAACE,IAAI,CAAC,wBAAwB,CAAC;IAC1C;IAEAd,SAAS,CAACY,SAAS,CAAC;IACpB,OAAOA,SAAS,CAACM,MAAM,KAAK,CAAC;EAC/B;EAEA,SAASC,YAAYA,CAACjB,CAAC,EAAE;IACvBA,CAAC,CAACkB,cAAc,CAAC,CAAC;IAElB,IAAI,CAACT,YAAY,CAAC,CAAC,EAAE;MACnB;IACF;IAEAU,KAAK,CAAC,iCAAiC,EAAE;MACvCC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;QACnB9B,MAAM,EAAEF,QAAQ,CAACE,MAAM;QACvBC,OAAO,EAAEH,QAAQ,CAACG,OAAO;QACzBC,YAAY,EAAEU,QAAQ,CAACd,QAAQ,CAACI,YAAY;MAC9C,CAAC;IACH,CAAC,CAAC,CACC6B,IAAI,CAAEC,GAAG,IAAK;MACb,IAAI,CAACA,GAAG,CAACC,EAAE,EAAE,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MACzD,OAAOF,GAAG,CAACG,IAAI,CAAC,CAAC;IACnB,CAAC,CAAC,CACDJ,IAAI,CAAEK,WAAW,IAAK;MACrBxC,aAAa,CAACwC,WAAW,CAAC;MAC1B;MACArC,WAAW,CAAC;QACVC,MAAM,EAAE,EAAE;QACVC,OAAO,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;QACzBC,YAAY,EAAE;MAChB,CAAC,CAAC;MACFE,SAAS,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CACDiC,KAAK,CAAEC,KAAK,IAAK;MAChBlC,SAAS,CAAC,CAAC,GAAGD,MAAM,EAAEmC,KAAK,CAACC,OAAO,CAAC,CAAC;IACvC,CAAC,CAAC;EACN;EAEA,oBACE7C,OAAA;IAAA8C,QAAA,gBACE9C,OAAA;MAAA8C,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE1BzC,MAAM,CAACmB,MAAM,GAAG,CAAC,iBAChB5B,OAAA;MAAKmD,SAAS,EAAC,gBAAgB;MAAAL,QAAA,EAC5BrC,MAAM,CAAC2C,GAAG,CAAC,CAACR,KAAK,EAAE3B,KAAK,kBACvBjB,OAAA;QAAeqD,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAAR,QAAA,EACpCF;MAAK,GADA3B,KAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN,eAEDlD,OAAA;MAAMuD,QAAQ,EAAE1B,YAAa;MAAAiB,QAAA,gBAC3B9C,OAAA;QAAA8C,QAAA,GAAO,SAEL,eAAA9C,OAAA;UACEwD,IAAI,EAAC,MAAM;UACX3C,IAAI,EAAC,QAAQ;UACbC,KAAK,EAAEV,QAAQ,CAACE,MAAO;UACvBmD,QAAQ,EAAE9C,YAAa;UACvB+C,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,EAEP9C,QAAQ,CAACG,OAAO,CAAC6C,GAAG,CAAC,CAAC1B,MAAM,EAAET,KAAK,kBAClCjB,OAAA;QAAA8C,QAAA,GAAmB,SACV,EAAC7B,KAAK,GAAG,CAAC,EAAC,GAClB,eAAAjB,OAAA;UACEwD,IAAI,EAAC,MAAM;UACX3C,IAAI,EAAE,SAASI,KAAK,EAAG;UACvBH,KAAK,EAAEY,MAAO;UACd+B,QAAQ,EAAE9C,YAAa;UACvB+C,QAAQ;QAAA;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA,GARQjC,KAAK;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASV,CACR,CAAC,eAEFlD,OAAA;QAAA8C,QAAA,GAAO,iBAEL,eAAA9C,OAAA;UACEa,IAAI,EAAC,cAAc;UACnBC,KAAK,EAAEV,QAAQ,CAACI,YAAa;UAC7BiD,QAAQ,EAAE9C,YAAa;UAAAmC,QAAA,EAEtB1C,QAAQ,CAACG,OAAO,CAAC6C,GAAG,CAAC,CAACO,CAAC,EAAE1C,KAAK,kBAC7BjB,OAAA;YAEEc,KAAK,EAAEG,KAAM;YACb2C,QAAQ,EAAE,CAACxD,QAAQ,CAACG,OAAO,CAACU,KAAK,CAAC,CAACM,IAAI,CAAC,CAAE;YAAAuB,QAAA,EAEzC1C,QAAQ,CAACG,OAAO,CAACU,KAAK,CAAC,CAACM,IAAI,CAAC,CAAC,IAAI,UAAUN,KAAK,GAAG,CAAC;UAAE,GAJnDA,KAAK;YAAA8B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAKJ,CACT;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACI,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ,CAAC,eAERlD,OAAA;QAAQwD,IAAI,EAAC,QAAQ;QAAAV,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd;AAAC/C,EAAA,CAhJQF,YAAY;AAAA4D,EAAA,GAAZ5D,YAAY;AAkJrB,eAAeA,YAAY;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}